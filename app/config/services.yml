services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false

    Doctrine\ORM\EntityManager: "@doctrine.orm.entity_manager"

    AppBundle\DataFixtures\DefaultFixtures: ~
    AppBundle\Controller\IndexController: ~
    AppBundle\Controller\UserController: ~
    AppBundle\Controller\CaseController: ~
    AppBundle\Controller\ManageController: ~
    AppBundle\Controller\OrderController: ~
    AppBundle\Controller\DeputyController: ~
    AppBundle\Controller\DocumentController: ~
    AppBundle\Controller\BehatController: ~
    AppBundle\Controller\CsvController: ~

    AppBundle\Service\ClientService: ~
    AppBundle\Service\OrderService: ~
    AppBundle\Service\DeputyService: ~
    AppBundle\Service\DocumentService: ~
    AppBundle\Service\CsvImporterService: ~

    # twig extensions
    AppBundle\Twig\AssetsExtension:
        arguments: [ "/assets/", "%env(DC_ASSETS_VERSION)%" ]
        tags:
            - { name: twig.extension }

    AppBundle\Twig\DebugExtension:
      tags:
      - { name: twig.extension }


    # Dynamo Db (session) config
    Aws\DynamoDb\DynamoDbClient:
        arguments:
            - region: 'eu-west-1'
              version: 'latest'
              validate: true
              endpoint: "%env(DYNAMODB_ENDPOINT)%"
              debug: false

    Common\SessionConnectionCreatingTable:
       arguments:
         $config:
            table_name: 'sessions'
            hash_key: 'id'
            max_lock_wait_time: 10
            min_lock_retry_microtime: 500
            max_lock_retry_microtime: 5000

    dynamo_session_handler:
      class: Aws\DynamoDb\SessionHandler
      arguments: [ "@Common\\SessionConnectionCreatingTable" ]

    Aws\DynamoDb\SessionConnectionInterface: "@Common\\SessionConnectionCreatingTable"

    AppBundle\Service\S3Client:
      arguments: [ "%env(DC_S3_REGION)%", "%env(DC_S3_ENDPOINT)%" ]

    # document storage and checking
    Aws\S3\S3ClientInterface: "@AppBundle\\Service\\S3Client"

    AppBundle\Service\File\Storage\S3Storage:
      arguments:
        $bucketName: "%env(DC_S3_BUCKET_NAME)%"

    AppBundle\Service\File\Storage\StorageInterface: "@AppBundle\\Service\\File\\AbstractStorage\\S3Storage"
    AppBundle\Service\File\Checker\ClamAVChecker: ~
    AppBundle\Service\File\Checker\PdfChecker: ~
    AppBundle\Service\File\Checker\JpgChecker: ~
    AppBundle\Service\File\Checker\PngChecker: ~
    AppBundle\Service\File\Checker\FileCheckerFactory: ~
    AppBundle\Service\File\FileUploader: ~
    AppBundle\Service\File\Types\Pdf: ~
    AppBundle\Service\File\Types\Jpg: ~
    AppBundle\Service\File\Types\Png: ~

    GuzzleHttp\Client:
      arguments:
        $config:
          base_uri: "https://file-scanner-api:8443"
          verify: false
          proxy: ""
          debug: false
          headers:
            Content-Type: multipart-form-data
          version: "1.1"
          timeout: 10
          allow_redirects: false

    GuzzleHttp\ClientInterface: "@GuzzleHttp\\Client"

    AppBundle\Service\Security\LoginAttempts\UserProvider:
      arguments:
        $attemptsConfig: { '5': '600', '10': '3600', 50: '86700'}
      tags:
        - { name: kernel.event_listener, event: 'security.authentication.failure', method: 'onAuthenticationFailure' }
        - { name: kernel.event_listener, event: 'security.authentication.success', method: 'onAuthenticationSuccess' }

    attemptsDynamoConnection:
      class: Common\SessionConnectionCreatingTable
      arguments:
        $config:
          table_name: 'attempts'
          hash_key: 'id'
          max_lock_wait_time: 10
          min_lock_retry_microtime: 500
          max_lock_retry_microtime: 5000

    AppBundle\Service\Security\LoginAttempts\DynamoDbStorage:
      arguments:
        $connection: "@attemptsDynamoConnection"

    # attempts checker configured to use the dynamoDb storage
    AppBundle\Service\Security\LoginAttempts\Storage:
      alias: AppBundle\Service\Security\LoginAttempts\DynamoDbStorage
