version: 2
jobs:
  test:
    machine:
      image: "circleci/classic:201808-01"
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-v1
      - run:
          name: Build Dependencies
          command: |
            pip install --quiet awscli
            pyenv rehash

            # Create the s3 buckets
            # & wait for the server to become available
            docker-compose up -d localstack
            docker-compose run --rm waitforit -address=http://localstack:4569 -debug
            docker-compose run --rm aws --endpoint-url=http://localstack:4569 s3 mb s3://sirius_test_bucket
            docker-compose run --rm aws --endpoint-url=http://localstack:4569 s3 mb s3://test_bucket

            # Create secrets
            docker-compose up -d secretsmanager
            docker-compose run --rm waitforit -address=http://secretsmanager:5000 -debug
            docker-compose run --rm aws --region eu-west-1 --endpoint-url=http://secretsmanager:5000 secretsmanager create-secret --name notification_api_key --secret-string "local-dc0ef8aa-ffdf-4bfb-9c47-30ea20362eb1-6b44c7a0-00dc-4d55-9fc4-69bcb0d67738"

            # Vendor php dependencies
            docker-compose run --rm composer
            # Generate static assets
            docker-compose run --rm npm
      - save_cache:
          key: dependencies-v1
          paths:
          - vendor
          - node_modules
          - bin
      - run:
          name: Unit Test
          command: docker-compose run --rm phpunit
      - run:
          name: Integration Test
          command: |
            ./generate_certs.sh
            docker-compose up --build -d loadbalancer
            docker-compose run --rm waitforit -address=tcp://loadbalancer:443 -debug -timeout 120
            docker-compose run --rm waitforit -address=tcp://postgres:5432 -debug
            docker-compose run --rm app php app/console doctrine:fixtures:load --append
            docker-compose run --rm behat

  build:
    machine: true
    steps:
      - add_ssh_keys:
          fingerprints:
          - d5:8c:8f:b5:22:91:45:16:35:49:42:f2:2e:78:a0:5f
      - checkout
      - run:
          name: Build
          command: |
            # Vendor php dependencies
            docker-compose run --rm composer
            # Generate static assets
            docker-compose run --rm npm
            # Build app
            docker-compose build web
            docker-compose build app
      - run:
          name: Deploy
          command: |
            git tag $CIRCLE_BUILD_NUM
            git push --tags

            docker images
            ./docker_login.sh
            docker-compose push app
            docker tag 311462405659.dkr.ecr.eu-west-1.amazonaws.com/serve-opg/app:latest 311462405659.dkr.ecr.eu-west-1.amazonaws.com/serve-opg/app:$CIRCLE_BUILD_NUM
            docker push 311462405659.dkr.ecr.eu-west-1.amazonaws.com/serve-opg/app:$CIRCLE_BUILD_NUM

            docker-compose push web
            docker tag 311462405659.dkr.ecr.eu-west-1.amazonaws.com/serve-opg/web:latest 311462405659.dkr.ecr.eu-west-1.amazonaws.com/serve-opg/web:$CIRCLE_BUILD_NUM
            docker push 311462405659.dkr.ecr.eu-west-1.amazonaws.com/serve-opg/web:$CIRCLE_BUILD_NUM
            curl --silent --show-error --fail -X POST "https://circleci.com/api/v1.1/project/github/ministryofjustice/serve-opg-infrastructure/build?circle-token=${CIRCLE_API_TOKEN}"


workflows:
  version: 2
  build:
    jobs:
    - test:
        filters:
          branches:
            ignore:
            - master
    - build:
        filters:
          branches:
            only:
            - master
