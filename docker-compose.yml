---
version: '3'

services:
  loadbalancer:
    image: jwilder/nginx-proxy
    ports:
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs
    depends_on:
      - web

  web:
    build:
      context: .
      dockerfile: docker/web/Dockerfile
    image: 311462405659.dkr.ecr.eu-west-1.amazonaws.com/opg-digicop/web:latest
    volumes:
      - ./web:/var/www/web
    depends_on:
      - app
    environment:
      APP_HOST: app
      APP_PORT: 9000
      NGINX_LOG_LEVEL: warn
      VIRTUAL_HOST: web

  app:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    image: 311462405659.dkr.ecr.eu-west-1.amazonaws.com/opg-digicop/app:latest
    ports:
      - 9000:9000
    depends_on:
      - dynamodb
      - postgres
      - "s3"
    volumes:
      - ./app:/var/www/app:ro
      - ./src:/var/www/src:ro
      - ./web:/var/www/web
    environment:
      APP_VERSION: 0-local
      # still needed ?
      AWS_ACCESS_KEY_ID: foo
      AWS_SECRET_ACCESS_KEY: bar
      # end still needed
      DYNAMODB_ENDPOINT: http://dynamodb:8000
      DC_SYMFONY_SECRET: dc2018!
      # db
      DC_DB_HOST: postgres
      DC_DB_PORT: 5432
      DC_DB_NAME: digicop
      DC_DB_USER: digicop
      DC_DB_PASS: dcdb2018!
      # S3 (don't define DC_S3_ENDPOINT if AWS credentials are defined in the instance)
      DC_S3_BUCKET_NAME: test_bucket
      DC_S3_REGION: eu-west-1
      DC_S3_ENDPOINT: 'http://s3:4569'
      # file scanner
      DC_FILE_SCANNER_URL: 'https://file-scanner-api:8443'
      DC_FILE_SCANNER_SSL_VERIFY: 1
      # fixtures
      DC_FIXURES_USERS: |
        email=elvis.ciotti@digital.justice.gov.uk&password=Abcd1234
        email=sean.privett@digital.justice.gov.uk&password=Abcd1234
        email=shaun.lizzio@digital.justice.gov.uk&password=Abcd1234
        email=robert.ford@digital.justice.gov.uk&password=Abcd1234
      DC_FIXURES_CASES: |
        number=12345671&name=Peter Bloggs&type=both
        number=22345672&name=Victoria Brady&type=pa
        number=32345673&name=Thomas Jefferson&type=hw
        number=42345674&name=Susan Grindle&type=both
        number=62345676&name=Lia Shelton&type=pa
        number=72345677&name=Abdullah Lang&type=pa
        number=52345675&name=Angela Walker&type=pa
        number=92345679&name=Justine Henderson&type=pa
        number=82345678&name=Marcus Cruz&type=pa

  dynamodb:
    image: dwmkerr/dynamodb

  s3:
    image: damacus/fake-s3
    ports:
      - 4569:4569
    environment:
      LICENSE_KEY: "8510622909"
    volumes:
      - ./s3:/fakes3_root

  postgres:
    image: postgres:9.6
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB: digicop
      POSTGRES_USER: digicop
      POSTGRES_PASSWORD: dcdb2018!

  composer:
    image: composer
    volumes:
      - .:/app
    command:
      - install

  npm:
    image: node
    environment:
      PATH: /app/node_modules/.bin:$PATH
    working_dir: /app
    volumes:
      - .:/app
    command:
      - npm
      - i
      - --unsafe-perm

  behat:
    image: php:7.2-fpm-alpine
    volumes:
      - .:/app
      - ./web/behat:/tmp/behat
    working_dir: /app
    entrypoint:
      - bin/behat
      - -c
      - tests/behat/behat.yml
    depends_on:
      - loadbalancer
    environment:
      APP_VERSION: 0-local
      BEHAT_PARAMS: '{"extensions" : {"Behat\\MinkExtension" : {"base_url" : "https://loadbalancer"}}}'
      AWS_ACCESS_KEY_ID: foo
      AWS_SECRET_ACCESS_KEY: bar
      DYNAMODB_ENDPOINT: http://dynamodb:8000
      DC_SYMFONY_SECRET: dc2018!
      DC_DB_HOST: postgres
      DC_DB_PORT: 5432
      DC_DB_NAME: digicop
      DC_DB_USER: digicop
      DC_DB_PASS: dcdb2018!


  phpunit:
    image: php:7.2-fpm-alpine
    volumes:
      - .:/app
    working_dir: /app
    entrypoint: bin/phpunit
    command:
      - -c
      - tests/phpunit
    environment:
      DC_SYMFONY_SECRET: dcphpunit2018!
      DC_DYNAMODB_KEY: key
      DC_DYNAMODB_SECRET: secret
      DC_DB_HOST: postgres
      DC_DB_PORT: 5432
      DC_DB_NAME: digicop
      DC_DB_USER: digicop
      DC_DB_PASS: dcdb2018!

  qa:
    image: jakzal/phpqa:alpine
    volumes:
      - .:/app:ro
    working_dir: /app

  waitforit:
    build:
      context: .
      dockerfile: docker/waitforit/Dockerfile
