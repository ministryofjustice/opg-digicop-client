# https://docs.docker.com/compose/compose-file/compose-file-v2/#environment
version: '2.1'

services:
  frontend:
    volumes_from:
        - php
    build:
      context: frontend
      dockerfile: ../docker/Dockerfile-nginx
    ports:
        - 8888:80
    depends_on:
    # todo - healthcheck - wait for FPM to give a 9000 out
        - php
    environment:
      SYMFONY_ALLOW_DEV: 1
    volumes:
       - ./frontend/misc/config/app.conf:/etc/nginx/conf.d/app.conf

  php:
    build:
      context: frontend
      dockerfile: Dockerfile-php
    volumes:
       - ./frontend/app:/app/app
       - ./frontend/src:/app/src
       - ./frontend/web:/app/web
       - ./frontend/vendor:/app/vendor:ro
       - ./env/local:/scripts:ro
    depends_on:
      - dynamodb
    environment:
      DC_SYMFONY_SECRET: dc2018!
      DC_DYNAMODB_KEY: key
      DC_DYNAMODB_SECRET: secret

  composer:
    build:
      context: ./frontend
      #TODO use a common one for front and api ?
      dockerfile: ../docker/Dockerfile-composer
    entrypoint:
        - /entrypoint.sh
    volumes:
      - ./env/local/composer.sh:/entrypoint.sh
      - ./frontend:/app:delegated
      - ~/.composer:/root/.composer:delegated

  node:
    build:
      context: ./frontend
      dockerfile: Dockerfile-node
    volumes:
      - ./env/local/frontend-setup.sh:/entrypoint-setup.sh:ro
      - ./env/local/frontend-generate.sh:/entrypoint-generate.sh:ro
      - ./frontend/package.json:/app/package.json:ro
      - ./frontend/package-lock.json:/app/package-lock.json:delegated
      - ./frontend/gulpfile.js:/app/gulpfile.js:ro
      - ./frontend/node_modules:/app/node_modules:delegated
      - ./frontend/web/assets:/app/web/assets:delegated
      - ./frontend/src:/app/src:ro

  behat:
    build:
      context: ./frontend
      dockerfile: Dockerfile-php
    depends_on:
      - frontend
    entrypoint:
        - /entrypoint.sh
    volumes:
      - ./env/local/behat.sh:/entrypoint.sh
      - ./frontend:/app:delegated

  phpunit:
    build:
      context: ./frontend
      dockerfile: Dockerfile-php
    entrypoint:
        - /entrypoint.sh
    volumes:
      - ./env/local/phpunit.sh:/entrypoint.sh
      - ./frontend:/app:delegated

  dynamodb:
    # https://hub.docker.com/r/deangiberson/aws-dynamodb-local/
    image: dwmkerr/dynamodb

  qa:
    image: jakzal/phpqa:alpine
    working_dir: /app
    volumes:
      - ./frontend:/app:delegated

  api_qa:
    image: jakzal/phpqa:alpine
    working_dir: /app
    volumes:
      - ./frontend:/app:delegated

  api:
      volumes_from:
          - api_php
      build:
        context: api
        dockerfile: ../docker/Dockerfile-nginx
      ports:
          - 8889:80
      depends_on:
          # todo - healthcheck - wait for FPM to give a 9000 out
          - api_php
      environment:
        SYMFONY_ALLOW_DEV: 1
      volumes:
         - ./api/misc/config/app.conf:/etc/nginx/conf.d/app.conf

  api_php:
      build:
        context: api
        dockerfile: Dockerfile-php
      volumes:
         - ./api/app:/app/app
         - ./api/src:/app/src
         - ./api/web:/app/web
         - ./api/vendor:/app/vendor:ro
         - ./env/local:/scripts:ro
      environment:
        DC_SYMFONY_SECRET: dcapi2018!

  api_composer:
      build:
        context: ./api
        dockerfile: ../docker/Dockerfile-composer
      entrypoint:
          - /entrypoint.sh
      volumes:
        - ./env/local/composer.sh:/entrypoint.sh
        - ./api:/app:delegated
