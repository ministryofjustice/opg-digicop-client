---
version: '3'

services:
  aws:
    image: infrastructureascode/aws-cli
    environment:
      AWS_ACCESS_KEY_ID: foo
      AWS_SECRET_ACCESS_KEY: bar
    entrypoint:
      - aws
    depends_on:
      - localstack

  loadbalancer:
    image: jwilder/nginx-proxy
    ports:
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs
    depends_on:
      - web

  web:
    build:
      context: .
      dockerfile: docker/web/Dockerfile
    image: 311462405659.dkr.ecr.eu-west-1.amazonaws.com/opg-digicop/web:latest
    volumes:
      - ./web:/var/www/web
    depends_on:
      - app
    environment:
      APP_HOST: app
      APP_PORT: 9000
      NGINX_LOG_LEVEL: warn
      VIRTUAL_HOST: web

  app:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    image: 311462405659.dkr.ecr.eu-west-1.amazonaws.com/opg-digicop/app:latest
    ports:
      - 9000:9000
    depends_on:
      - localstack
      - postgres
      - sirius-api
    volumes:
      - ./app:/var/www/app:ro
      - ./src:/var/www/src:ro
      - ./web:/var/www/web
    environment:
      APP_VERSION: 0-local-app
      WEB_VERSION: 0-local-web
      INFRA_VERSION: 0-local-infra
      # still needed ?
      AWS_ACCESS_KEY_ID: foo
      AWS_SECRET_ACCESS_KEY: bar
      # end still needed
      DYNAMODB_ENDPOINT: http://localstack:8000
      SM_ENDPOINT: http://localstack:4584
      DC_SYMFONY_SECRET: dc2018!
      # db
      DC_DB_HOST: postgres
      DC_DB_PORT: 5432
      DC_DB_NAME: digicop
      DC_DB_USER: digicop
      DC_DB_PASS: dcdb2018!
      # S3 (don't define DC_S3_ENDPOINT if AWS credentials are defined in the instance)
      DC_S3_BUCKET_NAME: test_bucket
      DC_S3_REGION: eu-west-1
      DC_S3_ENDPOINT: 'http://localstack:4569'
      # Sirius public API configuratiion
      SIRIUS_S3_BUCKET_NAME: sirius_test_bucket
      DC_SIRIUS_URL: 'http://sirius-api:4010/'
      # using the same key as notifications, as the localstack secretmanager mock only supports one key
      SIRIUS_PUBLIC_API_EMAIL: notification_api_key
      SIRIUS_KMS_KEY_ARN: arn:aws:kms:eu-west-1:012345678901:alias/notification_api_key
      # file scanner
      DC_FILE_SCANNER_URL: 'https://file-scanner-api:8443'
      DC_FILE_SCANNER_SSL_VERIFY: 1
      DC_BEHAT_CONTROLLER_ENABLED: 1
      # Alphagov Notification mock endpoint (behat email only)
      DC_NOTIFY_MOCK_ENDPOINT: "http://notify:8081"
      # fixtures (users and cases. Not needed here for behat testing)
      DC_FIXURES_USERS: |
        email=elvis.ciotti@digital.justice.gov.uk&password=Abcd1234
        email=sean.privett@digital.justice.gov.uk&password=Abcd1234
        email=shaun.lizzio@digital.justice.gov.uk&password=Abcd1234
        email=robert.ford@digital.justice.gov.uk&password=Abcd1234
      DC_FIXURES_CASES: |
        number=4865226T&name=Peter Bloggs&type=both
        number=88744573&name=Victoria Brady&type=PF
        number=1267847T&name=Thomas Jefferson&type=HW
        number=9258173T&name=Susan Grindle&type=both
        number=03427488&name=Lia Shelton&type=PF
        number=51934429&name=Abdullah Lang&type=PF
        number=6554033T&name=Angela Walker&type=PF
        number=98848454&name=Justine Henderson&type=PF
        number=14564190&name=Marcus Cruz&type=PF

  sirius-api:
    image: stoplight/prism
    volumes:
      - .:/tmp
    command:
      - mock
      - --spec
      - /tmp/api.public.v1.yaml

  localstack:
    image: localstack/localstack
    ports:
      - 4569:4569
      - 4584:4584
      - 8080:8080 # http://0.0.0.0:8080 to check deployed buckets and objects
    environment:
      - SERVICES=s3:4569,dynamodb:8000,secretsmanager:4584
      - DATA_DIR=/tmp/localstack/data
      - DEFAULT_REGION=eu-west-1
    volumes:
      - ./s3:/tmp/localstack/data

  postgres:
    image: postgres:9.6
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB: digicop
      POSTGRES_USER: digicop
      POSTGRES_PASSWORD: dcdb2018!

  composer:
    image: composer
    volumes:
      - .:/app
    command:
      - install

  npm:
    image: node
    environment:
      PATH: /app/node_modules/.bin:$PATH
    working_dir: /app
    volumes:
      - .:/app
    command:
      - npm
      - i
      - --unsafe-perm

  behat:
    image: php:7.2-fpm-alpine
    volumes:
      - .:/app
      - ./web/behat:/tmp/behat
    working_dir: /app
    entrypoint:
      - bin/behat
      - -c
      - tests/behat/behat.yml
      - --stop-on-failure
    depends_on:
      - loadbalancer
      - notify
    environment:
      APP_VERSION: 0-local-app
      WEB_VERSION: 0-local-web
      INFRA_VERSION: 0-local-infra
      BEHAT_PARAMS: '{"extensions" : {"Behat\\MinkExtension" : {"base_url" : "https://loadbalancer"}}}'
      AWS_ACCESS_KEY_ID: foo
      AWS_SECRET_ACCESS_KEY: bar
      DYNAMODB_ENDPOINT: http://localstack:8000
      DC_SYMFONY_SECRET: dc2018!
      DC_DB_HOST: postgres
      DC_DB_PORT: 5432
      DC_DB_NAME: digicop
      DC_DB_USER: digicop
      DC_DB_PASS: dcdb2018!
      # used to access the sent email. Note: it must be set in the mock client in the symfony container matching the email used for testing
      # tells behat at what base URL Notifications mock is responding
      DC_NOTIFY_MOCK_ENDPOINT: "http://notify:8081"
      # Sirius public API configuratiion
      SIRIUS_S3_BUCKET_NAME: sirius_test_bucket

  notify:
    build:
      context: ./docker/notify
      dockerfile: Dockerfile
    volumes:
      - ./docker/notify:/var/www/app
    ports:
      - 8081:8081

  phpunit:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    volumes:
      - .:/app
    working_dir: /app
    entrypoint: bin/phpunit
    command:
      - -c
      - tests/phpunit
    environment:
      APP_VERSION: 0-local-app
      WEB_VERSION: 0-local-web
      INFRA_VERSION: 0-local-infra
      DC_SYMFONY_SECRET: dcphpunit2018!
      DC_DYNAMODB_KEY: key
      DC_DYNAMODB_SECRET: secret
      DC_DB_HOST: postgres
      DC_DB_PORT: 5432
      DC_DB_NAME: digicop
      DC_DB_USER: digicop
      DC_DB_PASS: dcdb2018!
      DC_SIRIUS_URL: 'http://sirius-api:4010/'
      SIRIUS_S3_BUCKET_NAME: sirius_test_bucket

  qa:
    image: jakzal/phpqa:alpine
    volumes:
      - .:/app:ro
    working_dir: /app

  waitforit:
    build:
      context: .
      dockerfile: docker/waitforit/Dockerfile
