---
version: '3'

services:
  aws:
    image: infrastructureascode/aws-cli
    #    Setting here rather than .env to stop them being overwritten during build steps on prod
    environment:
      - AWS_ACCESS_KEY_ID=foo
      - AWS_SECRET_ACCESS_KEY=bar
    entrypoint:
      - aws
    working_dir: /app
    volumes:
      - .:/app
    depends_on:
      - localstack

  loadbalancer:
    image: jwilder/nginx-proxy:alpine
    ports:
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./docker/loadbalancer/my_proxy.conf:/etc/nginx/conf.d/my_proxy.conf:ro
    depends_on:
      - web
    environment:
      DHPARAM_GENERATION: 'false'

  web:
    build:
      context: .
      dockerfile: docker/web/Dockerfile
    image: 311462405659.dkr.ecr.eu-west-1.amazonaws.com/serve-opg/web:latest
    volumes:
      - ./public:/var/www/public
    depends_on:
      - app
    environment:
      APP_HOST: app
      APP_PORT: 9000
      NGINX_LOG_LEVEL: warn
      VIRTUAL_HOST: web

  app:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    image: 311462405659.dkr.ecr.eu-west-1.amazonaws.com/serve-opg/app:latest
    env_file:
      - .env
#    Setting here rather than .env to stop them being overwritten during build steps on prod
    environment:
      - AWS_ACCESS_KEY_ID=foo
      - AWS_SECRET_ACCESS_KEY=bar
      - DC_BEHAT_CONTROLLER_ENABLED=1
      - DC_S3_ENDPOINT=http://localstack:4572
      - DYNAMODB_ENDPOINT=http://localstack:4569
      - NOTIFICATION_API_KEY=local-dc0ef8aa-ffdf-4bfb-9c47-30ea20362eb1-6b44c7a0-00dc-4d55-9fc4-69bcb0d67738
      - OS_PLACES_API_KEY=DUMMY_KEY
      - SIRIUS_PUBLIC_API_PASSWORD=FAKE_API_PASSWORD
      - APP_SECRET=aFakeSecret
      - FIXTURES_ENABLED=true
    depends_on:
      - localstack
      - postgres
      - sirius-api
    volumes:
      - .:/app

  sirius-api:
    image: stoplight/prism
    volumes:
      - .:/tmp
    command:
      - mock
      - --spec
      - /tmp/api.public.v1.yaml

  localstack:
    image: localstack/localstack:0.9.1
    environment:
      - SERVICES=s3:4572,dynamodb:4569
      - DATA_DIR=/tmp/localstack/data
      - DEFAULT_REGION=eu-west-1
    volumes:
      - ./localstack-data:/tmp/localstack/data

  postgres:
    image: postgres:9.6-alpine
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB: serve-opg
      POSTGRES_USER: serve-opg
      POSTGRES_PASSWORD: dcdb2018!

  composer:
    image: composer
    volumes:
      - .:/app
    command:
      - install
      - --no-interaction

  npm:
    image: node:10.13-stretch
    environment:
      PATH: /node_modules/.bin:$PATH
    working_dir: /app
    volumes:
      - .:/app
    entrypoint: ["npm"]
    command:
      - i
      - --unsafe-perm

  behat:
    image: php:7.2-fpm-alpine
    volumes:
      - .:/app
      - ./features/screenshots:/tmp/behat
    working_dir: /app
    entrypoint:
      - vendor/bin/behat
      - -c
      - behat.yml.dist
      - --suite=local
      - --stop-on-failure
      - --no-interaction
    env_file:
      - .env
    depends_on:
      - loadbalancer
    environment:
      BEHAT_PARAMS: '{"extensions" : {"Behat\\MinkExtension" : {"base_url" : "https://loadbalancer"}}}'

  phpunit:
    image: composer
    volumes:
      - .:/app
    working_dir: /app
    entrypoint:
      - bin/phpunit
      - --verbose
      - tests
      - --log-junit
      - /app/tests/artifacts/phpunit/junit.xml
    environment:
      - DC_S3_ENDPOINT=http://localstack:4572
      - DYNAMODB_ENDPOINT=http://localstack:4569
      - SIRIUS_PUBLIC_API_PASSWORD=FAKE_API_PASSWORD
      - AWS_ACCESS_KEY_ID=foo
      - AWS_SECRET_ACCESS_KEY=bar
      - APP_ENV=test

  qa:
    image: jakzal/phpqa:alpine
    volumes:
      - .:/app:ro
    working_dir: /app

  waitforit:
    build:
      context: .
      dockerfile: docker/waitforit/Dockerfile
