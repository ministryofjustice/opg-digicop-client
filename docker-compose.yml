---
version: '3'

services:
  aws:
    image: infrastructureascode/aws-cli
    env_file:
      - .env
    entrypoint:
      - aws
    depends_on:
      - localstack

  loadbalancer:
    image: jwilder/nginx-proxy
    ports:
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - ./docker/loadbalancer/my_proxy.conf:/etc/nginx/conf.d/my_proxy.conf:ro
    depends_on:
      - web

  web:
    build:
      context: ""
      dockerfile: ./docker/web/Dockerfile
    image: 311462405659.dkr.ecr.eu-west-1.amazonaws.com/serve-opg/web:latest
    volumes:
      - ./public:/var/www/public
    depends_on:
      - app
    environment:
      APP_HOST: app
      APP_PORT: 9000
      NGINX_LOG_LEVEL: warn
      VIRTUAL_HOST: web

  app:
    build:
      context: ""
      dockerfile: ./docker/app/Dockerfile
    image: 311462405659.dkr.ecr.eu-west-1.amazonaws.com/serve-opg/app:latest
    env_file:
      - .env
    depends_on:
      - localstack
      - postgres
      - sirius-api
    working_dir: /var/www
    volumes:
      - ./src:/var/www/src
      - ./public:/var/www/public
      - ./templates:/var/www/templates

  sirius-api:
    image: stoplight/prism
    volumes:
      - .:/tmp
    command:
      - mock
      - --spec
      - /tmp/api.public.v1.yaml

  localstack:
    image: localstack/localstack
    ports:
      - 4569:4569
    environment:
      - SERVICES=s3:4569,dynamodb:8000
      - DATA_DIR=/tmp/localstack/data
      - DEFAULT_REGION=eu-west-1
    volumes:
      - ./s3:/tmp/localstack/data

  postgres:
    image: postgres:9.6
    environment:
#      @todo look at renaming .env vars to match this rather than DC_DB_HOST etc
      POSTGRES_HOST: postgres
      POSTGRES_DB: serve-opg
      POSTGRES_USER: serve-opg
      POSTGRES_PASSWORD: dcdb2018!

  composer:
    image: composer
    volumes:
      - .:/app
    command:
      - install
      - --no-interaction

  npm:
    image: node:10.13-stretch
    environment:
      PATH: /node_modules/.bin:$PATH
    working_dir: /app
    volumes:
      - .:/app
    entrypoint: ["npm"]
    command:
      - i
      - --unsafe-perm

  behat:
    image: php:7.2-fpm-alpine
    volumes:
      - .:/app
      - ./features/screenshots:/tmp/behat
    working_dir: /app
    entrypoint:
      - vendor/bin/behat
      - -c
      - behat.yml.dist
      - --stop-on-failure
    env_file:
      - .env
    depends_on:
      - loadbalancer
      #- notify
    environment:
      BEHAT_PARAMS: '{"extensions" : {"Behat\\MinkExtension" : {"base_url" : "https://loadbalancer"}}}'
      # used to access the sent email. Note: it must be set in the mock client in the symfony container matching the email used for testing
      # tells behat at what base URL Notifications mock is responding
      #DC_NOTIFY_MOCK_ENDPOINT: "http://notify:8081"
      # Sirius public API configuratiion

  #  notify:
#    build:
#      context: ./docker/notify
#      dockerfile: Dockerfile
#    volumes:
#      - ./docker/notify:/var/www/app
#    ports:
#      - 8081:8081

  phpunit:
    image: composer
    volumes:
      - .:/app
    working_dir: /app
    entrypoint:
      - bin/phpunit
      - --verbose
      - tests

  qa:
    image: jakzal/phpqa:alpine
    volumes:
      - .:/app:ro
    working_dir: /app

  waitforit:
    build:
      context: ""
      dockerfile: ./docker/waitforit/Dockerfile
